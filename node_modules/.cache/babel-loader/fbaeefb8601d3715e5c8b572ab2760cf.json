{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar useJitsi = function useJitsi(options) {\n  var domain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'meet.jit.si';\n\n  var _useState = useState(null),\n      _useState2 = slicedToArray(_useState, 2),\n      jitsi = _useState2[0],\n      setJitsi = _useState2[1];\n\n  useEffect(function () {\n    if (window.JitsiMeetExternalAPI) {\n      options.parentNode = document.getElementById(options.parentNode); // eslint-disable-next-line no-undef\n\n      setJitsi(new JitsiMeetExternalAPI(domain, options));\n    } else {\n      setJitsi({\n        error: 'JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded'\n      });\n    }\n\n    return function () {\n      return jitsi && jitsi.dispose();\n    };\n  }, []);\n  return jitsi;\n};\n\nuseJitsi.propTypes = {\n  options: PropTypes.shape({\n    roomName: PropTypes.string.isRequired,\n    width: PropTypes.string,\n    height: PropTypes.string,\n    parentNode: PropTypes.string,\n    configOverwrite: PropTypes.string,\n    interfaceConfigOverwrite: PropTypes.object,\n    noSSL: PropTypes.bool,\n    jwt: PropTypes.string,\n    onload: PropTypes.func,\n    invitees: PropTypes.array,\n    devices: PropTypes.object,\n    userInfo: PropTypes.object\n  }),\n  domain: PropTypes.string\n};\n\nvar Jutsu = function Jutsu(props) {\n  var domain = props.domain,\n      roomName = props.roomName,\n      displayName = props.displayName,\n      password = props.password,\n      _props$jwt = props.jwt,\n      jwt = _props$jwt === undefined ? null : _props$jwt,\n      subject = props.subject;\n  var loadingComponent = props.loadingComponent,\n      containerStyles = props.containerStyles,\n      jitsiContainerStyles = props.jitsiContainerStyles;\n\n  var _useState = useState(true),\n      _useState2 = slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var jitsi = useJitsi({\n    roomName: roomName,\n    parentNode: 'jitsi-container',\n    jwt: jwt\n  }, domain);\n  var containerStyle = {\n    width: '800px',\n    height: '400px'\n  };\n  var jitsiContainerStyle = {\n    display: loading ? 'none' : 'block',\n    width: '100%',\n    height: '100%'\n  };\n  useEffect(function () {\n    if (jitsi) {\n      jitsi.executeCommand('subject', subject);\n      jitsi.addEventListener('videoConferenceJoined', function () {\n        if (password) jitsi.executeCommand('password', password);\n        setLoading(false);\n        jitsi.executeCommand('displayName', displayName);\n      });\n      jitsi.addEventListener('passwordRequired', function () {\n        if (password) {\n          jitsi.executeCommand('password', password);\n        }\n\n        setLoading(false);\n      });\n    }\n\n    return function () {\n      return jitsi && jitsi.dispose();\n    };\n  }, [jitsi]);\n  return React.createElement('div', {\n    style: _extends({}, containerStyle, containerStyles)\n  }, loading && (loadingComponent || React.createElement('p', null, 'Loading ...')), React.createElement('div', {\n    id: 'jitsi-container',\n    style: _extends({}, jitsiContainerStyle, jitsiContainerStyles)\n  }));\n};\n\nJutsu.propTypes = {\n  domain: PropTypes.string,\n  roomName: PropTypes.string.isRequired,\n  displayName: PropTypes.string,\n  password: PropTypes.string,\n  jwt: PropTypes.string,\n  subject: PropTypes.string,\n  loadingComponent: PropTypes.object,\n  containerStyles: PropTypes.object,\n  jitsiContainerStyles: PropTypes.object\n};\nexport { Jutsu, useJitsi };","map":{"version":3,"sources":["../src/useJitsi.js","../src/index.js"],"names":["useJitsi","domain","jitsi","setJitsi","useState","window","document","options","error","PropTypes","object","string","Jutsu","roomName","displayName","password","jwt","subject","props","loadingComponent","containerStyles","jitsiContainerStyles","loading","setLoading","parentNode","containerStyle","jitsiContainerStyle"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst useJitsi = (options, domain = 'meet.jit.si') => {\n  const [jitsi, setJitsi] = useState(null)\n\n  useEffect(() => {\n    if (window.JitsiMeetExternalAPI) {\n      options.parentNode = document.getElementById(options.parentNode)\n      // eslint-disable-next-line no-undef\n      setJitsi(new JitsiMeetExternalAPI(domain, options))\n    } else {\n      setJitsi({ error: 'JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded' })\n    }\n    return () => jitsi && jitsi.dispose()\n  }, [])\n\n  return jitsi\n}\n\nuseJitsi.propTypes = {\n  options: PropTypes.shape({\n    roomName: PropTypes.string.isRequired,\n    width: PropTypes.string,\n    height: PropTypes.string,\n    parentNode: PropTypes.string,\n    configOverwrite: PropTypes.string,\n    interfaceConfigOverwrite: PropTypes.object,\n    noSSL: PropTypes.bool,\n    jwt: PropTypes.string,\n    onload: PropTypes.func,\n    invitees: PropTypes.array,\n    devices: PropTypes.object,\n    userInfo: PropTypes.object\n  }),\n  domain: PropTypes.string\n}\n\nexport default useJitsi\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport useJitsi from './useJitsi'\n\nconst Jutsu = (props) => {\n  const { domain, roomName, displayName, password, jwt = null, subject } = props\n  const { loadingComponent, containerStyles, jitsiContainerStyles } = props\n\n  const [loading, setLoading] = useState(true)\n  const jitsi = useJitsi({ roomName, parentNode: 'jitsi-container', jwt: jwt }, domain)\n\n  const containerStyle = {\n    width: '800px',\n    height: '400px'\n  }\n\n  const jitsiContainerStyle = {\n    display: loading ? 'none' : 'block',\n    width: '100%',\n    height: '100%'\n  }\n\n  useEffect(() => {\n    if (jitsi) {\n      jitsi.executeCommand('subject', subject)\n\n      jitsi.addEventListener('videoConferenceJoined', () => {\n        if (password) jitsi.executeCommand('password', password)\n        setLoading(false)\n        jitsi.executeCommand('displayName', displayName)\n      })\n\n      jitsi.addEventListener('passwordRequired', () => {\n        if (password) {\n          jitsi.executeCommand('password', password)\n        }\n        setLoading(false)\n      })\n    }\n\n    return () => jitsi && jitsi.dispose()\n  }, [jitsi])\n\n  return (\n    <div style={{ ...containerStyle, ...containerStyles }}>\n      {loading && (loadingComponent || <p>Loading ...</p>)}\n      <div\n        id='jitsi-container'\n        style={{ ...jitsiContainerStyle, ...jitsiContainerStyles }}\n      />\n    </div>\n  )\n}\n\nJutsu.propTypes = {\n  domain: PropTypes.string,\n  roomName: PropTypes.string.isRequired,\n  displayName: PropTypes.string,\n  password: PropTypes.string,\n  jwt: PropTypes.string,\n  subject: PropTypes.string,\n  loadingComponent: PropTypes.object,\n  containerStyles: PropTypes.object,\n  jitsiContainerStyles: PropTypes.object\n}\n\nexport { Jutsu, useJitsi }\n"]},"metadata":{},"sourceType":"module"}